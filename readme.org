#+TITLE: doom config
#+AUTHOR: zen
#+EMAIL: 71zenith@proton.me
#+DESCRIPTION: my doom emacs setup
#+auto_tangle: t


* user setup
#+begin_src emacs-lisp :tangle config.el
;;; -*- lexical-binding: t; -*-
(setq user-full-name "zen"
      user-mail-address "71zenith@proton.me")
#+end_src

* font setup
#+begin_src emacs-lisp :tangle config.el
(setq doom-font (font-spec :family "Cascadia Code" :size 19)
      doom-big-font (font-spec :family "Cascadia Code" :size 19)
      doom-variable-pitch-font (font-spec :family "IBM Plex Sans" :size 19)
      doom-unicode-font (font-spec :family "Joypixels")
      doom-serif-font (font-spec :family "IBM Plex Sans" :size 19 :weight 'medium))
#+end_src

* ui setup
#+begin_src emacs-lisp :tangle config.el
(setq doom-theme 'doom-horizon)
(setq display-line-numbers-type t)

(pixel-scroll-precision-mode)

(setq default-frame-alist '((internal-border-width . 10)))
(setq initial-frame-alist default-frame-alist)

(setq fancy-splash-image (expand-file-name "waifu.jpg" doom-user-dir))
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-footer)
(assoc-delete-all "Open project" +doom-dashboard-menu-sections)
(assoc-delete-all "Jump to bookmark" +doom-dashboard-menu-sections)
(assoc-delete-all "Recently opened files" +doom-dashboard-menu-sections)
(assoc-delete-all "Open private configuration" +doom-dashboard-menu-sections)

(add-hook! '+doom-dashboard-mode-hook (hl-line-mode -1))
(setq-hook! '+doom-dashboard-mode-hook evil-normal-state-cursor (list nil))

(scroll-bar-mode -1)
(global-visual-line-mode 1)
(tool-bar-mode -1)
(menu-bar-mode -1)
(global-auto-revert-mode 1)
(window-divider-mode 1)
(global-subword-mode 1)

(setq global-auto-revert-non-file-buffers t
      auto-save-default t
      x-stretch-cursor t
      hscroll-margin 8
      scroll-margin 8)
#+end_src

* org mode setup
#+begin_src emacs-lisp :tangle packages.el
(package! org-auto-tangle)
#+end_src

#+begin_src emacs-lisp :tangle config.el
(setq org-agenda-files (expand-file-name "agenda.org" org-directory)
      org-ellipsis " ▼ "
      org-superstar-headline-bullets-list '("◉" "●" "○" "◆" "●" "○" "◆"))

(custom-set-faces
  '(org-level-1 ((t (:inherit outline-1 :height 1.3))))
  '(org-level-2 ((t (:inherit outline-2 :height 1.2))))
  '(org-level-3 ((t (:inherit outline-3 :height 1.1))))
  '(org-level-4 ((t (:inherit outline-4 :height 1.0)))))

(require 'org-auto-tangle)
(add-hook 'org-mode-hook 'org-auto-tangle-mode)
(add-hook 'org-mode-hook 'parinfer-rust-mode)

(setq parinfer-rust-auto-download t)
#+end_src

* qol setup
#+begin_src emacs-lisp :tangle config.el
(setq confirm-kill-emacs nil)
(setq source-directory
      (expand-file-name "~/dl/emacs/"))

(evil-define-key 'normal dired-mode-map
  (kbd "h") 'dired-up-directory
  (kbd "l") 'dired-find-file)

(setq evil-vsplit-window-right t
      evil-split-window-below t)

(defadvice! prompt-for-buffer (&rest _)
  :after '(evil-window-split evil-window-vsplit)
  (consult-buffer))
#+end_src

* completion setup
#+begin_src emacs-lisp :tangle config.el
(setq which-key-idle-delay 0.4
      which-key-idle-secondary-delay 0.05)

(after! marginalia
  (setq marginalia-align 'right
        marginalia-align-offset -1))

(after! company
  (setq company-idle-delay 0.2
        company-tooltip-limit 10
        company-box-enable-icon nil
        company-box-doc-enable nil
        company-tooltip-minimum-width 40))

(after! vertico
  (setq vertico-count 10))
#+end_src

* elcord setup
#+begin_src emacs-lisp :tangle packages.el
(package! elcord)
#+end_src

#+begin_src emacs-lisp :tangle config.el
(require 'elcord)
(setq elcord-quiet t
      elcord-client-id "1076774019833016330"
      elcord-idle-message "Can't think"
      elcord-idle-timer 180
      elcord-refresh-rate 10
      elcord--editor-name "Elisp Interpreter"
      elcord-editor-icon "emacs_papirus_icon"
      elcord-display-buffer-details nil)
(elcord-mode)
#+end_src

* doom modules setup
#+begin_src emacs-lisp :tangle init.el
(doom! :input
       japanese

       :completion
       (company +childframe)
       (vertico +icons)

       :ui
       doom
       doom-dashboard
       emoji
       hl-todo
       indent-guides
       ligatures
       modeline
       (popup +defaults +all)
       (vc-gutter +pretty)
       workspaces

       :editor
       (evil +everywhere)
       fold
       (format +save)
       parinfer
       snippets
       word-wrap

       :emacs
       (dired +icons)
       electric
       (ibuffer +icons)
       (undo +tree)
       vc

       :term
       vterm

       :checkers
       (syntax +childframe)
       (spell +aspell)

       :tools
       (eval +overlay)
       lookup
       (lsp +elgot)
       magit
       tree-sitter

       :os
       tty

       :lang
       (clojure +lsp)
       emacs-lisp
       markdown
       (org +pretty)
       (rust +lsp +tree-sitter)
       (sh +tree-sitter)

       :app
       calendar

       :config
       (default +bindings +smartparens))

(defvar native-comp-deferred-compilation-deny-list nil)
#+end_src
